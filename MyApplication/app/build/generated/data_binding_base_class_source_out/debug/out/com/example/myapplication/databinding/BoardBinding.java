// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.myapplication.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BoardBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView aaaaaaa;

  @NonNull
  public final ImageView boardLocation;

  @NonNull
  public final ImageView boardMention;

  @NonNull
  public final CircleImageView boardProfile;

  @NonNull
  public final Button boardUpload;

  @NonNull
  public final ImageView boardVote;

  @NonNull
  public final ImageView boradAddPic;

  @NonNull
  public final EditText editBoardContent;

  @NonNull
  public final Spinner spinnerMember;

  private BoardBinding(@NonNull LinearLayout rootView, @NonNull TextView aaaaaaa,
      @NonNull ImageView boardLocation, @NonNull ImageView boardMention,
      @NonNull CircleImageView boardProfile, @NonNull Button boardUpload,
      @NonNull ImageView boardVote, @NonNull ImageView boradAddPic,
      @NonNull EditText editBoardContent, @NonNull Spinner spinnerMember) {
    this.rootView = rootView;
    this.aaaaaaa = aaaaaaa;
    this.boardLocation = boardLocation;
    this.boardMention = boardMention;
    this.boardProfile = boardProfile;
    this.boardUpload = boardUpload;
    this.boardVote = boardVote;
    this.boradAddPic = boradAddPic;
    this.editBoardContent = editBoardContent;
    this.spinnerMember = spinnerMember;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BoardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BoardBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.board, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BoardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.aaaaaaa;
      TextView aaaaaaa = rootView.findViewById(id);
      if (aaaaaaa == null) {
        break missingId;
      }

      id = R.id.boardLocation;
      ImageView boardLocation = rootView.findViewById(id);
      if (boardLocation == null) {
        break missingId;
      }

      id = R.id.boardMention;
      ImageView boardMention = rootView.findViewById(id);
      if (boardMention == null) {
        break missingId;
      }

      id = R.id.board_Profile;
      CircleImageView boardProfile = rootView.findViewById(id);
      if (boardProfile == null) {
        break missingId;
      }

      id = R.id.boardUpload;
      Button boardUpload = rootView.findViewById(id);
      if (boardUpload == null) {
        break missingId;
      }

      id = R.id.boardVote;
      ImageView boardVote = rootView.findViewById(id);
      if (boardVote == null) {
        break missingId;
      }

      id = R.id.boradAddPic;
      ImageView boradAddPic = rootView.findViewById(id);
      if (boradAddPic == null) {
        break missingId;
      }

      id = R.id.edit_board_content;
      EditText editBoardContent = rootView.findViewById(id);
      if (editBoardContent == null) {
        break missingId;
      }

      id = R.id.spinner_member;
      Spinner spinnerMember = rootView.findViewById(id);
      if (spinnerMember == null) {
        break missingId;
      }

      return new BoardBinding((LinearLayout) rootView, aaaaaaa, boardLocation, boardMention,
          boardProfile, boardUpload, boardVote, boradAddPic, editBoardContent, spinnerMember);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
