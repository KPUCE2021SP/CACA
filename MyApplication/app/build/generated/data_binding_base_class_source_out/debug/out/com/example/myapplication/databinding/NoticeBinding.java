// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.myapplication.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NoticeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView noticeCM;

  @NonNull
  public final TextView noticeLike;

  @NonNull
  public final TextView noticeMT;

  @NonNull
  public final TextView noticePin;

  @NonNull
  public final ImageView noticeProfile;

  @NonNull
  public final TextView noticeTag;

  @NonNull
  public final FloatingActionButton noticeWrite;

  private NoticeBinding(@NonNull LinearLayout rootView, @NonNull TextView noticeCM,
      @NonNull TextView noticeLike, @NonNull TextView noticeMT, @NonNull TextView noticePin,
      @NonNull ImageView noticeProfile, @NonNull TextView noticeTag,
      @NonNull FloatingActionButton noticeWrite) {
    this.rootView = rootView;
    this.noticeCM = noticeCM;
    this.noticeLike = noticeLike;
    this.noticeMT = noticeMT;
    this.noticePin = noticePin;
    this.noticeProfile = noticeProfile;
    this.noticeTag = noticeTag;
    this.noticeWrite = noticeWrite;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NoticeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NoticeBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.notice, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NoticeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.noticeCM;
      TextView noticeCM = rootView.findViewById(id);
      if (noticeCM == null) {
        break missingId;
      }

      id = R.id.noticeLike;
      TextView noticeLike = rootView.findViewById(id);
      if (noticeLike == null) {
        break missingId;
      }

      id = R.id.noticeMT;
      TextView noticeMT = rootView.findViewById(id);
      if (noticeMT == null) {
        break missingId;
      }

      id = R.id.noticePin;
      TextView noticePin = rootView.findViewById(id);
      if (noticePin == null) {
        break missingId;
      }

      id = R.id.noticeProfile;
      ImageView noticeProfile = rootView.findViewById(id);
      if (noticeProfile == null) {
        break missingId;
      }

      id = R.id.noticeTag;
      TextView noticeTag = rootView.findViewById(id);
      if (noticeTag == null) {
        break missingId;
      }

      id = R.id.noticeWrite;
      FloatingActionButton noticeWrite = rootView.findViewById(id);
      if (noticeWrite == null) {
        break missingId;
      }

      return new NoticeBinding((LinearLayout) rootView, noticeCM, noticeLike, noticeMT, noticePin,
          noticeProfile, noticeTag, noticeWrite);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
